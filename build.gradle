plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.be'
version = '0.0.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot JPA for data persistence and database interaction
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Spring Security for authentication and authorization
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// Spring Boot Web for building RESTful APIs
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Lombok for reducing boilerplate code (getters, setters, etc.)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Development tools to automatically restart the application on code changes
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// MySQL Connector for connecting to a MySQL database
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Spring Boot Starter Test for testing Spring applications
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Spring Security Test for testing Spring Security configurations
	testImplementation 'org.springframework.security:spring-security-test'

	// JUnit Platform Launcher for running unit tests
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// ================= JWT Dependencies =================

	// JWT API for generating and parsing JSON Web Tokens
	implementation 'io.jsonwebtoken:jjwt-api:0.11.1'

	// JWT Implementation for runtime usage of JWT (parsing, signing tokens, etc.)
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.1'

	// JWT Jackson for JSON serialization/deserialization when working with JWT tokens
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.1'


	//==================Starter Mail==========================
	// Spring Boot Starter Mail for sending emails
	implementation 'org.springframework.boot:spring-boot-starter-mail'


	//================Razer Pay ===============================
	implementation 'org.json:json:20210307'
	implementation 'com.razorpay:razorpay-java:1.4.3'
}


tasks.named('test') {
	useJUnitPlatform()
}
